const fetch = require('node-fetch');
const FetchData = require('./fetchData');
jest.mock('node-fetch');

describe('FetchData', () => {
  beforeEach(() => {
    fetch.mockClear();
  });

  test('fetchPage should fetch data from the correct URL', async () => {
    fetch.mockResolvedValue({
      ok: true,
      json: async () => ({ results: [{ id: 1, name: 'Test' }] })
    });

    const fetchData = new FetchData('/records');
    const pageData = await fetchData.fetchPage(1);

    expect(fetch).toHaveBeenCalledWith('/records');
    expect(pageData.results[0].id).toBe(1);
  });

  test('fetchAllData should fetch all data pages', async () => {
    fetch
      .mockResolvedValueOnce({
        ok: true,
        json: async () => ({ results: [{ id: 1, name: 'Test' }] })
      })
      .mockResolvedValueOnce({
        ok: true,
        json: async () => ({ results: [] })
      });

    const fetchData = new FetchData('/records');
    const allData = await fetchData.fetchAllData();

    expect(allData.length).toBe(1);
    expect(allData[0].id).toBe(1);
  });
});

